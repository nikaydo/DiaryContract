syntax = "proto3";

import "google/protobuf/timestamp.proto";

package diary;   

option go_package = "github.com/nikaydo/DiaryService;diary";

service Diary{
  rpc DiaryWrite (DiaryWriteRequest) returns (DiaryWriteResponse);
  
  rpc DiaryRead (DiaryReadRequest) returns (DiaryReadResponse);

  rpc DiaryUpdate (DiaryUpdateRequest) returns (DiaryUpdateResponse);

  rpc DiaryDelete (DiaryDeleteRequest) returns (DiaryDeleteResponse);

} 

message DiaryDeleteRequest {
  string uuidDiaryes = 1; 
  string uuidUser = 2; 
}

message DiaryDeleteResponse {
  string status = 1; 
}

message DiaryUpdateRequest {
  string uuidDiaryes = 1; 
  string uuidUser = 2; 
  Diaries Diary = 3; 
}

message DiaryUpdateResponse {
  string status = 1; 
}

message DiaryWriteRequest {
  string uuidUser = 1; 
  Diaries Diary = 2; 
}

message DiaryWriteResponse {
  string uuidDiaryes = 1; 
}

message DiaryReadRequest {
  string uuidDiaryes = 1; 
  string uuidUser = 2; 
}

message DiaryReadResponse {
  repeated Diaries Diary = 1;
}

message Diaries {
  string id = 1;
  string title = 2;
  google.protobuf.Timestamp date = 3;
  repeated string tags = 4;
  repeated Element elements = 5;
}

message Element {
  string id = 1;
  float x = 2;
  float y = 3;
  string type = 4;  // text, decoration, shape, interactive, image, emoji, divider, line
  optional int32 width = 5;
  optional int32 height = 6;
  
  // Content fields
  optional string content = 7;  // HTML content for text/interactive elements
  optional string emojiContent = 8;  // Emoji character
  
  // Type-specific fields
  optional string decorationType = 9;  // flower, leaf, border, heart, star, frame, sparkles, ribbon
  optional string shapeType = 10;     // circle, rectangle, triangle, star, heart, arrow
  optional string interactiveType = 11; // speech, thought, callout, highlight
  optional string imageType = 12;     // placeholder, uploaded
  optional string textStyle = 13;    // basic, heading, quote, sticky
  
  Style style = 14;
}

message Style {
  // Colors
  optional string color = 1;
  optional string backgroundColor = 2;
  optional string borderColor = 3;
  optional string gradient = 4;
  
  // Typography
  optional int32 fontSize = 5;
  optional string fontFamily = 6;
  optional string fontWeight = 7;    // normal, bold, 100-900
  optional string fontStyle = 8;     // normal, italic, oblique
  optional string textDecoration = 9; // none, underline, line-through, overline
  optional string textAlign = 10;    // left, center, right, justify
  optional float lineHeight = 11;
  optional float letterSpacing = 12;
  optional float wordSpacing = 13;
  
  // Layout & Spacing
  optional int32 padding = 14;
  optional int32 margin = 15;
  optional int32 borderWidth = 16;
  optional int32 borderRadius = 17;
  optional string borderStyle = 18;  // solid, dashed, dotted
  
  // Transforms & Effects
  optional float scale = 19;          // Use float for precision (1.0 = 100%)
  optional float rotation = 20;       // Degrees, use float for precision
  optional float opacity = 21;        // 0.0 to 1.0
  optional string shadow = 22;        // CSS shadow string
  optional int32 zIndex = 23;
}